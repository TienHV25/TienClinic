"use strict";

var _express = _interopRequireDefault(require("express"));
var _homeController = _interopRequireDefault(require("../controller/homeController.js"));
var _userController = _interopRequireDefault(require("../controller/userController.js"));
var _doctorController = _interopRequireDefault(require("../controller/doctorController.js"));
var _patientController = _interopRequireDefault(require("../controller/patientController.js"));
var _specialtyController = _interopRequireDefault(require("../controller/specialtyController.js"));
var _clinicController = _interopRequireDefault(require("../controller/clinicController.js"));
var _mapController = _interopRequireDefault(require("../controller/mapController.js"));
var _handbookController = _interopRequireDefault(require("../controller/handbookController.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
var router = _express["default"].Router();
var initWebRoutes = function initWebRoutes(app) {
  router.get('/', _homeController["default"].getHomePage);
  router.get('/about', _homeController["default"].getAbout);
  router.get('/crud', _homeController["default"].getCRUD);
  router.post('/post-crud', _homeController["default"].postCRUD);
  router.get('/get-crud', _homeController["default"].displayGetCRUD);
  router.get('/edit-crud', _homeController["default"].getEditCRUD);
  router.post('/put-crud', _homeController["default"].putCRUD);
  router.get('/delete-crud', _homeController["default"].deleteCRUD);
  router.post('/api/login', _userController["default"].handleLogin);
  router.post('/api/register', _userController["default"].handleRegisterApi);
  router.get("/api/get-all-users", _userController["default"].handleGetAllUser);
  router.post('/api/create-new-user', _userController["default"].handleCreateNewUser);
  router.put('/api/update-user', _userController["default"].handleUpdateUser);
  router["delete"]('/api/delete-user', _userController["default"].handleDeleteUser);
  router.get('/api/allcode', _userController["default"].getAllCode);
  router.get('/api/top-doctor-home', _doctorController["default"].getTopDoctorHome);
  router.get('/api/get-all-doctors', _doctorController["default"].getAllDoctors);
  router.post('/api/save-info-doctors', _doctorController["default"].postInforDoctor);
  router.get('/api/get-detail-doctor-by-id', _doctorController["default"].getDetailDoctorById);
  router.post('/api/bulk-create-schedule', _doctorController["default"].bulkCreateSchedule);
  router.get('/api/get-schedule-doctor-by-date', _doctorController["default"].getScheduleByDate);
  router.get('/api/get-extra-infor-doctor-by-id', _doctorController["default"].getExtraInforDoctorById);
  router.get('/api/get-profile-doctor-by-id', _doctorController["default"].getProfileDoctorById);
  router.get('/api/get-specialty-by-doctor-id', _doctorController["default"].getSpecialtyDoctorById);
  router.get('/api/get-patient-by-doctor-id', _doctorController["default"].getPatientByDocotorId);
  router.post('/api/confirm-patient-appointment', _doctorController["default"].confirmPatientAppointment);
  router.post('/api/patient-book-appointment', _patientController["default"].postBookAppointment);
  router.post('/api/verify-book-appointment', _patientController["default"].postVerifyBookAppointment);
  router.post('/api/create-new-specialty', _specialtyController["default"].createSpecialty);
  router.get('/api/get-specialty', _specialtyController["default"].getAllSpecialty);
  router.get('/api/get-specialty-doctor', _specialtyController["default"].getDoctorOfSpecialty);
  router.get('/api/get-specialty-detail', _specialtyController["default"].getSpecialtyDetail);
  router.post('/api/create-new-clinic', _clinicController["default"].createClinic);
  router.get('/api/get-clinic', _clinicController["default"].getAllClinic);
  router.get('/api/get-clinic-doctor', _clinicController["default"].getDoctorOfClinic);
  router.get('/api/get-clinic-detail', _clinicController["default"].getClinicDetail);
  router.get('/api/geocode', _mapController["default"].geocodeAddress);
  router.post('/api/create-handbook-test', _handbookController["default"].createHandbookTest);
  router.get('/api/get-handbook-tests', _handbookController["default"].getAllHandbookTests);
  router.get('/api/get-handbook-test-detail', _handbookController["default"].getHandbookTestDetail);
  router.post('/api/create-new-handbook', _handbookController["default"].createHandbook);
  router.get('/api/get-handbook', _handbookController["default"].getAllHandbook);
  router.get('/api/get-handbook-detail', _handbookController["default"].getHandbookDetail);
  return app.use("/", router);
};
module.exports = initWebRoutes;